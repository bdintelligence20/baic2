server {
    listen 8080;
    
    # Set MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Explicitly set PDF MIME type
    types {
        application/pdf pdf;
    }
    
    # Increase timeouts and buffer sizes for large files
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 60s;
    send_timeout 60s;
    
    # Enable gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/json 
        application/javascript 
        application/xml+rss 
        application/atom+xml 
        image/svg+xml 
        application/pdf;
    
    # Browser caching for static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Enable CORS for fonts
        location ~* \.(woff|woff2|ttf|eot)$ {
            add_header Access-Control-Allow-Origin "*";
        }
    }
    
    # HTML files - short cache with revalidation
    location ~* \.html$ {
        root /usr/share/nginx/html;
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header Vary "Accept-Encoding";
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=()";
    }
    
    # Service Worker - no cache
    location /sw.js {
        root /usr/share/nginx/html;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }
    
    # Manifest and robots - medium cache
    location ~* \.(manifest|webmanifest|xml|txt)$ {
        root /usr/share/nginx/html;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # PDF files - long cache
    location ~* \.pdf$ {
        root /usr/share/nginx/html;
        expires 30d;
        add_header Cache-Control "public";
        add_header Content-Type application/pdf;
        add_header Content-Disposition inline;
        add_header Vary "Accept-Encoding";
    }
    
    # API calls - no cache (if you add API endpoints later)
    location /api/ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }
    
    # Main location for React Router
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
        
        # For HTML pages served by React Router
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header Vary "Accept-Encoding";
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=()";
    }
    
    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Optimize logging
    access_log /var/log/nginx/access.log combined buffer=16k flush=2m;
    error_log /var/log/nginx/error.log warn;
}
