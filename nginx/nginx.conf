# Performance-optimized nginx configuration for Google Cloud Run
server {
    listen 8080;
    server_name _;
    
    # Set MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Performance optimizations for Cloud Run
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Client settings optimized for performance
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Advanced compression - better than gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        font/woff
        font/woff2
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' *.google.com *.googleapis.com *.gstatic.com *.googletagmanager.com *.facebook.com *.connect.facebook.net *.cookiebot.com *.doubleclick.net *.stripe.com *.typeform.com *.rudderlabs.com data: blob:;" always;
    
    # Main application route
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # Cache HTML files briefly with revalidation
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }
    }
    
    # Static assets - aggressive caching
    location ~* \.(css|js)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }
    
    # Optimized images - long cache
    location ~* /images/.*\.webp$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }
    
    # Original images - shorter cache (fallbacks)
    location ~* \.(png|jpg|jpeg|gif|svg|ico)$ {
        root /usr/share/nginx/html;
        expires 30d;
        add_header Cache-Control "public";
        add_header Vary Accept-Encoding;
    }
    
    # Fonts - long cache
    location ~* \.(woff|woff2|ttf|eot|otf)$ {
        root /usr/share/nginx/html;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
    }
    
    # PDF files optimized
    location ~* \.pdf$ {
        root /usr/share/nginx/html;
        add_header Content-Type application/pdf;
        add_header Content-Disposition inline;
        expires 30d;
        add_header Cache-Control "public";
    }
    
    # Service Worker - no cache
    location = /sw.js {
        root /usr/share/nginx/html;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }
    
    # Manifest - short cache
    location = /manifest.json {
        root /usr/share/nginx/html;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Health check for Cloud Run
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}
